{"version":3,"sources":["constants/action-types.js","actions/index.js","Components/TitleBar/Titlebar.jsx","Components/Login/Login.jsx","Components/Home/Home.jsx","Components/Posts/Post.jsx","Components/NewsFeed/NewsFeed.jsx","Components/Profile/Profile.jsx","Components/Signup/Signup.jsx","Components/Posts/CreatePost.jsx","Components/Posts/PostDisplay.jsx","Components/Auth/PrivateRoute.jsx","Components/Posts/EditPost.jsx","Components/Menu/Menu.jsx","Components/Routes.jsx","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_ARTICLE","LOGIN_USER","UPDATE_USER","LOGOUT_USER","EDIT_POST","DISPLAY_POST","CLEAR_DISPLAY_POST","CLEAR_EDIT_POST","NAVIGATE_TO_EDIT_POST","NAVIGATE_TO_DISPLAY_POST","loginUser","payload","type","logoutUser","updateUser","editPost","navigateToEdit","navigateToDisplay","connect","state","dispatch","logout","action","props","react_default","a","createElement","className","id","class","user","uk-toggle","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","username","email","password","errorMessage","login","bind","assertThisInitialized","handleSubmit","handleUsernameChange","handleEmailChange","handlePaswordChange","_this2","_this$state","axios","SERVER_BASE_URL","then","res","console","log","data","catch","err","event","preventDefault","_this$state2","setState","target","value","_this$state3","react_router","to","pathname","from","location","Titlebar","style","minHeight","marginTop","onSubmit","react_router_dom","for","onChange","aria-describedby","placeholder","Component","mapStateToProps","mapDispatchToProps","navigate","EditDropdown","_ref","post","objectWithoutProperties","onClick","href","Post","mapNewsfeedPosts","toConsumableArray","newsfeed","reverse","map","index","minWidth","src","data-toggle","aria-haspopup","aria-expanded","imageURL","fontSize","description","navigation","NewsFeed","Posts_Post","Profile","mapProfilePosts","posts","length","profilePosts","image","currentImageGroup","push","imageGroup","background","concat","backgroundSize","displayPost","redirectToPost","Signup","authenticated","CreatePost","getSearchedPhotos","imageSearchText","replace","result","retrievedImages","results","handleRetrievedImages","error","groupedImages","finalImageGroups","handlePostImageClick","urls","raw","imageFound","handlePostPhotoToFeed","postButtonClicked","selectedImageUrl","postDescriptionText","status","postShared","attributes","getNamedItem","selectPhotoPanelHide","postPhotoPanelHide","handleImageSearchText","handlePostDescriptionText","shouldUpdateUser","position","overflowX","width","height","left","_this$props$state","postToDisplay","PostDisplay_EditDropdown","PrivateRoute","authRender","render","_this$props","component","rest","assign","isLoaded","postID","postToEdit","_id","clearEditPost","handleDeletePost","overflow","overflowY","noNavigation","uk-offcanvas","activeClassName","defineProperty","Routes","auth","Components_Menu_Menu","path","exact","Auth_PrivateRoute","PostDisplay","EditPost","App","padding","Components_Routes","Boolean","window","hostname","match","initialState","rootReducer","arguments","undefined","articles","objectSpread","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06621f20.chunk.js","sourcesContent":["export const ADD_ARTICLE = \"ADD_ARTICLE\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const DISPLAY_POST = \"DISPLAY_POST\";\r\nexport const CLEAR_DISPLAY_POST = \"CLEAR_DISPLAY_POST\";\r\nexport const CLEAR_EDIT_POST = \"CLEAR_EDIT_POST\";\r\nexport const NAVIGATE_TO_EDIT_POST = \"NAVIGATE_TO_EDIT_POST\";\r\nexport const NAVIGATE_TO_DISPLAY_POST = \"NAVIGATE_TO_DISPLAY_POST\";","import { ADD_ARTICLE, LOGIN_USER, LOGOUT_USER, UPDATE_USER, EDIT_POST, CLEAR_EDIT_POST, DISPLAY_POST, CLEAR_DISPLAY_POST, NAVIGATE_TO_EDIT_POST, NAVIGATE_TO_DISPLAY_POST } from '../constants/action-types';\r\n\r\nexport function addArticle(payload) {\r\n  return { type: ADD_ARTICLE, payload }\r\n};\r\n\r\nexport function loginUser(payload) {\r\n  return { type: LOGIN_USER, payload }\r\n};\r\n\r\nexport function logoutUser(payload) {\r\n  return { type: LOGOUT_USER, payload }\r\n};\r\n\r\nexport function updateUser(payload) {\r\n  return { type: UPDATE_USER, payload }\r\n};\r\n\r\nexport function editPost(payload) {\r\n  return { type: EDIT_POST, payload }\r\n};\r\n\r\nexport function clearEditPost(payload) {\r\n  return { type: CLEAR_EDIT_POST, payload }\r\n};\r\n\r\nexport function displayPost(payload) {\r\n  return { type: DISPLAY_POST, payload }\r\n};\r\n\r\nexport function clearDisplayPost(payload) {\r\n  return { type: CLEAR_DISPLAY_POST, payload }\r\n};\r\n\r\nexport function navigateToEdit(payload) {\r\n  return { type: NAVIGATE_TO_EDIT_POST, payload }\r\n};\r\n\r\nexport function navigateToDisplay(payload) {\r\n  return { type: NAVIGATE_TO_DISPLAY_POST, payload }\r\n};","import React, { Component } from 'react';\r\nimport '../../styles/app.css';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/index';\r\nimport * as axios from 'axios';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: action => dispatch(logoutUser(action))\r\n  };\r\n}\r\n\r\nconst TitleBar = (props) => {\r\n\r\n  const displayMenu = () => {\r\n    return props.state.user ? <i class=\"fas fa-bars pr-4 profile-header-text hover-pointer\"  uk-toggle=\"target: #offcanvas-push\"></i> : null\r\n }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row fixed-top fixed-profile-row shadow m-0\" id=\"TitleBar\">\r\n        <div className=\"col-2\"></div>\r\n        <div className=\"col-8 d-flex justify-content-center align-items-center\">\r\n        {/* Change to stylesheet | Remove inline style */}\r\n          <i class=\"fas fa-camera-retro pr-3 mt-0 h-100 d-flex justify-content-center align-items-center title-icon\"></i> \r\n          <h2 className=\"title-text text-black text-center mt-3\">React-A-Gram</h2>\r\n        </div>\r\n        <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n          {/* <button onClick={logout} className=\"btn mr-5 btn-warning\">\r\n            Logout\r\n          </button> */}\r\n          {\r\n           displayMenu() \r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleBar);","import React, { Component } from 'react';\r\nimport * as axios from 'axios';\r\nimport '../../styles/app.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { loginUser } from '../../actions/index';\r\nimport Titlebar from '../TitleBar/Titlebar';\r\nimport { withRouter } from 'react-dom';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n  // return { articles: state.articles };\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user))\r\n  };\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePaswordChange = this.handlePaswordChange.bind(this);\r\n  }\r\n\r\n  login() {\r\n    const { username, password } = this.state;\r\n    axios.post(SERVER_BASE_URL + '/user/login', {\r\n      username,\r\n      password,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.props.loginUser(res.data.user);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { username, email, password } = this.state;\r\n    this.login({ username, email, password });\r\n  }\r\n\r\n  handleUsernameChange(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n\r\n  handleEmailChange(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handlePaswordChange(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { user } = this.props.state;\r\n    if (user) return <Redirect\r\n      to={{\r\n        pathname: \"/profile\",\r\n        state: { from: this.props.location }\r\n      }}\r\n    />\r\n    return (\r\n      <div>\r\n        <Titlebar />\r\n        <div className=\"row\">\r\n          <div className=\"col d-flex flex-column justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n            <div style={{ marginTop: '10vh' }}></div>\r\n\r\n            <h1 className=\"p-4 pb-0 mb-0\">Login</h1>\r\n            {/* Programatically display error message here */}\r\n            <h3 className=\"p-0 m-0 mb-3 text-secondary\">{this.state.errorMessage}</h3>\r\n\r\n            <form className=\"shadow p-5\" onSubmit={this.handleSubmit}>\r\n              {/* Add link to signup component */}\r\n              <p>Not a member? <Link to=\"/signup\"><span className=\"text-secondary\">Sign Up</span></Link></p>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Username</label>\r\n                <input value={username} onChange={this.handleUsernameChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Username\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input value={password} onChange={this.handlePaswordChange} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../styles/app.css';\r\nimport Login from '../Login/Login';\r\nimport TitleBar from '../TitleBar/Titlebar';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(this.props.articles);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect\r\n      to={{ pathname: '/login' }}\r\n    />\r\n    // return (\r\n    //   <div>\r\n    //     <TitleBar />\r\n    //     <Login />\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport '../../styles/app.css';\r\nimport { editPost, navigateToEdit } from '../../actions/index';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editPost: action => dispatch(editPost(action)),\r\n    navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n  };\r\n}\r\n\r\nconst EditDropdownProto = ({ post, ...props }) => {\r\n  const setPostToState = () => {\r\n    props.editPost(post);\r\n    props.navigateToEdit(true);\r\n  }\r\n  return <a className=\"dropdown-item\" onClick={setPostToState} href=\"#\">Edit</a>;\r\n}\r\n\r\nconst EditDropdown = connect(mapStateToProps, mapDispatchToProps)(EditDropdownProto);\r\n\r\nclass Post extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      editPost: false,\r\n    }\r\n  }\r\n\r\n\r\n  mapNewsfeedPosts = () => {\r\n    const { user } = this.props.state;\r\n    return [...user.newsfeed].reverse().map((post, index) => {\r\n      console.log('Post props', this.props);\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col d-flex flex-column justify-content-center align-items-center\" id=\"Post\">\r\n            <div className=\"post-wrapper d-flex flex-column mb-3\">\r\n              <div className=\"w-100 d-flex flex-row justify-content-between align-items-center pt-2 mb-2\" id=\"Author-Post-Header\">\r\n                <div className=\"d-flex justify-content-start align-items-center\">\r\n                  <div className=\"author-post-img-wrapper d-flex justify-content-center align-items-center\">\r\n                    <img className=\"rounded img-post img-fluid m-4 ml-5\" style={{ minWidth: '3rem' }} src=\"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\" />\r\n                  </div>\r\n                  <b className=\"post-author-username pl-3 ml-3\">{user.username}</b>\r\n                </div>\r\n                <div className=\"btn-group mr-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Action\r\n  </button>\r\n                  <div className=\"dropdown-menu\">\r\n                    <EditDropdown post={post} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-img-wrapper\">\r\n                <img className=\"img-fluid\" src={post.imageURL} />\r\n              </div>\r\n              <div className=\"w-100 d-flex flex-column justify-content-start pt-2\">\r\n                <p className=\"text-left pb-0 mb-0 author-description-comment\" id=\"Author-Description\" style={{ fontSize: '85%' }}> <b className=\"pr-2\">{post.username}</b>{post.description}</p>\r\n                {/* <p className=\"text-secondary pt-1 author-description-comment\" id=\"Author-Description\">View all comments</p> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.state.navigation.navigateToEdit) {\r\n      return <Redirect\r\n        to={{\r\n          pathname: \"/edit\",\r\n        }}\r\n      />\r\n    }\r\n    return (\r\n      // fix image not covering entire backgrond on right side on large screens\r\n      <div>\r\n        {this.mapNewsfeedPosts()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","import React, { Component } from 'react';\r\nimport '../../styles/app.css';\r\nimport Post from '../Posts/Post';\r\nimport TitleBar from '../TitleBar/Titlebar';\r\n\r\nclass NewsFeed extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TitleBar />\r\n        <div style={{ marginTop: '10vh' }}>\r\n        </div>\r\n        <Post />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsFeed;","import React, { Component } from 'react';\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport '../../styles/app.css';\r\nimport Post from '../Posts/Post';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, displayPost, navigateToEdit, navigateToDisplay } from '../../actions/index';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user)),\r\n    displayPost: post => dispatch(displayPost(post)),\r\n    navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n    navigateToDisplay: navigate => dispatch(navigateToDisplay(navigate)),\r\n  };\r\n}\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirectToPost: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  mapProfilePosts = () => {\r\n    const { user } = this.props.state;\r\n    //TODO: display error to client if no images are recieved\r\n    // Refactor the logic below for clarity\r\n    if (user.posts.length > 0) {\r\n\r\n      const profilePosts = [[]];\r\n      user.posts.map((image, index) => {\r\n        const currentImageGroup = profilePosts[profilePosts.length - 1];\r\n        if (currentImageGroup.length < 2) {\r\n          currentImageGroup.push(image);\r\n        } else {\r\n          profilePosts.push([]);\r\n          currentImageGroup.push(image);\r\n        }\r\n      });\r\n\r\n      const finalImageGroups = profilePosts.reverse().map((imageGroup) => {\r\n        return (\r\n          <div className=\"row\">\r\n            {imageGroup.reverse().map(post => {\r\n              return (\r\n                <div className=\"col-lg-4 profile-col-pad\" style={{ minHeight: '20rem' }}>\r\n                  <div className=\"ProfileImageWrapper\">\r\n                    <div className=\"hover-pointer\"\r\n                      style={{\r\n                        background: `url(${post.imageURL}) no-repeat center center`,\r\n                        backgroundSize: 'cover',\r\n                        minHeight: '100%',\r\n                      }} onClick={() => {\r\n                        this.props.navigateToEdit(false);\r\n                        console.log('post', post);\r\n                        this.props.displayPost(post);\r\n                        this.props.navigateToDisplay(true);\r\n                      }}> </div>\r\n                    {/* <img className=\"img-fluid hover-pointer\" style={{height: 'auto', minWidth: '35rem'}} src={post.imageURL} data={post.imageURL} /> */}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        );\r\n      });\r\n      return finalImageGroups;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { navigateToDisplay } = this.props.state.navigation;\r\n    if (navigateToDisplay) {\r\n      return <Redirect\r\n        to={{\r\n          pathname: \"/post\",\r\n        }}\r\n      />\r\n    }\r\n    return (\r\n      <div>\r\n        {/* Turn into individual header component */}\r\n        <div className=\"row fixed-top fixed-profile-row \">\r\n          <div className=\"col d-flex justify-content-between align-items-center shadow\" id=\"ProfileTitleBar\">\r\n            <h2 className=\"text-black text-center pl-4 profile-header-text\">{this.props.state.user.username}</h2>\r\n            {/* <button class=\"uk-button uk-button-default uk-margin-small-right\" type=\"button\" uk-toggle=\"target: #offcanvas-push\">Push</button>  */}\r\n            <i class=\"fas fa-bars pr-4 profile-header-text hover-pointer\" uk-toggle=\"target: #offcanvas-push\"></i>\r\n          </div>\r\n        </div>\r\n        {/* End of header component */}\r\n\r\n        <div style={{ marginTop: '10vh' }}>\r\n        </div>\r\n        {this.mapProfilePosts()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { Component } from 'react';\r\nimport {\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport * as axios from 'axios';\r\nimport '../../styles/app.css';\r\nimport Titlebar from '../TitleBar/Titlebar';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/index';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n  // return { articles: state.articles };\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loginUser: user => dispatch(loginUser(user))\r\n  };\r\n}\r\n\r\nclass Signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      authenticated: false,\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePaswordChange = this.handlePaswordChange.bind(this);\r\n  }\r\n\r\n  login() {\r\n    const { username, email, password } = this.state;\r\n    axios.post(SERVER_BASE_URL + '/user/signup', {\r\n      username,\r\n      email,\r\n      password,\r\n    })\r\n      .then((res) => {\r\n        console.log('signup res', res);\r\n        this.props.loginUser(res.data.user);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.login();\r\n  }\r\n\r\n  handleUsernameChange(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n\r\n  handleEmailChange(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handlePaswordChange(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { username, email, password } = this.state;\r\n    const { user } = this.props.state;\r\n    if (user) return <Redirect\r\n      to={{\r\n        pathname: \"/profile\",\r\n        state: { from: this.props.location }\r\n      }}\r\n    />\r\n    return (\r\n      <div>\r\n        <Titlebar />\r\n        <div className=\"row\">\r\n          <div className=\"col d-flex flex-column justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n            <div style={{ marginTop: '10vh' }}></div>\r\n\r\n            <h1 className=\"p-4\">Signup</h1>\r\n\r\n            <form className=\"shadow p-5\" onSubmit={this.handleSubmit}>\r\n            <p>Already a Member? <Link to=\"/login\"><span className=\"text-secondary\">Login</span></Link></p>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Username</label>\r\n                <input value={username} onChange={this.handleUsernameChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Username\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">email</label>\r\n                <input value={email} onChange={this.handleEmailChange} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input value={password} onChange={this.handlePaswordChange} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/app.css';\r\nimport Titlebar from '../TitleBar/Titlebar';\r\nimport { updateUser } from '../../actions/index'\r\nimport * as axios from 'axios';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n    return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateUser: user => dispatch(updateUser(user))\r\n    };\r\n}\r\n\r\nclass CreatePost extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imageSearchText: '',\r\n            retrievedImages: [],\r\n            finalImageGroups: [],\r\n            selectedImageUrl: '',\r\n            postDescriptionText: '',\r\n            selectPhotoPanelHide: '0px',\r\n            postPhotoPanelHide: '9999px',\r\n            postShared: false,\r\n            postButtonClicked: false,\r\n            shouldUpdateUser: false,\r\n            imageFound: '',\r\n        }\r\n    }\r\n\r\n    getSearchedPhotos = (event) => {\r\n        event.preventDefault();\r\n        const { imageSearchText } = this.state;\r\n        axios.get(`https://api.unsplash.com/search/photos?page=1&per_page=18&query=${imageSearchText.replace(/\\s+/g, '+')}&client_id=4c1f5525e6dcace5b7a268ca4f5ac18f69dd4b46f3b01226b4287772783938e4`)\r\n            .then(result => {\r\n                console.log(result)\r\n                this.setState({ retrievedImages: result.data.results });\r\n                this.handleRetrievedImages();\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    handleRetrievedImages = () => {\r\n        const { retrievedImages } = this.state;\r\n        //TODO: display error to client if no images are recieved\r\n        // Refactor the logic below for clarity\r\n        if (retrievedImages.length > 0) {\r\n\r\n            const groupedImages = [[]];\r\n            retrievedImages.map((image, index) => {\r\n                const currentImageGroup = groupedImages[groupedImages.length - 1];\r\n                if (currentImageGroup.length < 2) {\r\n                    currentImageGroup.push(image);\r\n                } else {\r\n                    groupedImages.push([]);\r\n                    currentImageGroup.push(image);\r\n                }\r\n            });\r\n\r\n            const finalImageGroups = groupedImages.map((imageGroup) => {\r\n                return (\r\n                    <div className=\"row\">\r\n                        {imageGroup.map(image => {\r\n                            return (\r\n                                <div className=\"col-xl-4 profile-col-pad d-flex justify-content-center\">\r\n                                    <div className=\"CreatePostImageWrapper\">\r\n                                        <img className=\"img-fluid hover-pointer\" onClick={this.handlePostImageClick} src={image.urls.raw} data={image.urls.raw} />\r\n                                    </div>\r\n                                    {/* <div className=\"CreatePostImageWrapper d-flex justify-content-center\" style={{height: '500px'}}>\r\n                                        <div className=\"hover-pointer\"\r\n                                            style={{\r\n                                                background: `url(${image.urls.raw}) no-repeat center center`,\r\n                                                backgroundSize: 'cover',\r\n                                                minHeight: '100%',\r\n                                                 minWidth: '25rem',\r\n                                            }} onClick={this.handlePostImageClick} data={image.urls.raw}> </div>\r\n                                    </div> */}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                );\r\n            });\r\n            return this.setState({ finalImageGroups });\r\n        }\r\n        return this.setState({ imageFound: 'No Images Found (Try A Different Keyword)' });\r\n    }\r\n\r\n    handlePostPhotoToFeed = (event) => {\r\n        event.preventDefault();\r\n        if (!this.state.postButtonClicked) {\r\n            this.setState({ postButtonClicked: true });\r\n            const { selectedImageUrl, postDescriptionText } = this.state;\r\n            axios.post(SERVER_BASE_URL + '/user/createPost', { username: this.props.state.user.username, imageURL: selectedImageUrl, postDescriptionText })\r\n                .then(result => {\r\n                    if (result.status === 200) {\r\n                        console.log(result);\r\n                        const { user } = result.data;\r\n                        this.props.updateUser(user);\r\n                        console.log('create post user check', this.props);\r\n                        this.setState({ postShared: true });\r\n                    }\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    handlePostImageClick = (event) => {\r\n        const selectedImageUrl = event.target.attributes.getNamedItem('data').value;\r\n        this.setState({ selectedImageUrl, selectPhotoPanelHide: '-9999px', postPhotoPanelHide: '0px' });\r\n        console.log(selectedImageUrl);\r\n    }\r\n\r\n    handleImageSearchText = (event) => {\r\n        this.setState({ imageSearchText: event.target.value })\r\n    }\r\n\r\n    handlePostDescriptionText = (event) => {\r\n        this.setState({ postDescriptionText: event.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { imageSearchText, postDescriptionText, selectedImageUrl, finalImageGroups, selectPhotoPanelHide, postPhotoPanelHide, postShared, imageFound } = this.state;\r\n        if (postShared) return <Redirect to=\"/newsfeed\" />\r\n        return (\r\n            <div>\r\n                <Titlebar />\r\n                <div className=\"row\">\r\n                    <div style={{ minHeight: '15vh' }}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col d-flex flex-column justify-content-center align-items-center\" id=\"CreatePostWrapper\">\r\n                        <div className=\" w-75 create-post-panel\" style={{ position: 'relative' }}>\r\n                            <div className=\"d-flex flex-column justify-content-start align-items-center p-5\" style={{ overflowX: 'hidden', /*overflowY: 'scroll',*/ position: 'absolute', width: '100%', height: '100%', left: selectPhotoPanelHide }} id=\"Photo-Search-Wrapper\">\r\n                                <h1>Select a Photo to Post</h1>\r\n                                <form className=\"p-4 w-100\" onSubmit={this.getSearchedPhotos}>\r\n                                    <input placeholder=\"Search for a photo...\" className=\"form-control\" value={imageSearchText} onChange={this.handleImageSearchText}></input>\r\n                                </form>\r\n                                {finalImageGroups.length > 0 ? finalImageGroups.map(image => image)\r\n                                    : imageFound /* Fix this to only display error when request to the API has already been made */}\r\n                            </div>\r\n                            <div className=\"d-flex flex-column justify-content-start align-items-center p-5\" style={{ overflowX: 'hidden', /*overflowY: 'scroll',*/ position: 'absolute', width: '100%', height: '100%', left: postPhotoPanelHide }} id=\"Photo-Search-Wrapper\">\r\n                                <h3>Add back button</h3>\r\n                                <h1>Share your photo</h1>\r\n                                <form className=\"p-4 w-100\" onSubmit={this.handlePostPhotoToFeed}>\r\n                                    <textarea placeholder=\"Description...\" className=\"form-control\" value={postDescriptionText} onChange={this.handlePostDescriptionText}></textarea>\r\n                                    <button className=\"btn btn-primary p-2 m-1\">Share</button>\r\n                                </form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <img className=\"img-fluid hover-pointer\" src={selectedImageUrl} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);","import React, { Component, } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport '../../styles/app.css';\r\nimport { editPost, navigateToEdit } from '../../actions/index';\r\nimport Titlebar from '../TitleBar/Titlebar';\r\n\r\nconst mapStateToProps = state => {\r\n    return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        editPost: action => dispatch(editPost(action)),\r\n        navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n\r\n    };\r\n}\r\n\r\nconst EditDropdownProto = ({ post, ...props }) => {\r\n    const setPostToState = () => {\r\n    props.editPost(post);\r\n    props.navigateToEdit(true);\r\n    console.log('clicked', props);\r\n    }\r\n    return <a className=\"dropdown-item\" onClick={setPostToState} href=\"#\">Edit</a>;\r\n}\r\n\r\nconst EditDropdown = connect(mapStateToProps, mapDispatchToProps)(EditDropdownProto);\r\n\r\nclass Post extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            editPost: false,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log('props', this.props);\r\n    }\r\n\r\n    //   mapNewsfeedPosts = () => {\r\n    //     const { user } = this.props.state;\r\n    //     return [...user.newsfeed].reverse().map((post, index) => {\r\n    //       console.log('Post props', this.props);\r\n    //       return (\r\n    //         <div className=\"row\">\r\n    //           <div className=\"col d-flex flex-column justify-content-center align-items-center\" id=\"Post\">\r\n    //             <div className=\"post-wrapper d-flex flex-column\">\r\n    //               <div className=\"w-100 d-flex flex-row justify-content-between align-items-center pt-2 mb-2\" id=\"Author-Post-Header\">\r\n    //                 <div className=\"d-flex justify-content-start align-items-center\">\r\n    //                   <div className=\"author-post-img-wrapper d-flex justify-content-center align-items-center\">\r\n    //                     <img className=\"rounded img-post img-fluid m-4 ml-5\" style={{minWidth: '3rem'}} src=\"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\" />\r\n    //                   </div>\r\n    //                   <b className=\"post-author-username pl-3 ml-3\">{user.username}</b>\r\n    //                 </div>\r\n    //                 <div className=\"btn-group mr-4\">\r\n    //                   <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    //                     Action\r\n    //   </button>\r\n    //                   <div className=\"dropdown-menu\">\r\n    //                     <EditDropdown post={post} onClickFunction={this.directToEditPost} />\r\n    //                   </div>\r\n    //                 </div>\r\n    //               </div>\r\n    //               <div className=\"post-img-wrapper\">\r\n    //                 <img className=\"img-fluid\" src={post.imageURL} />\r\n    //               </div>\r\n    //               <div className=\"w-100 d-flex flex-column justify-content-start pt-2\">\r\n    //                 <p className=\"text-left pb-0 mb-0 author-description-comment\" id=\"Author-Description\" style={{fontSize: '85%'}}> <b className=\"pr-2\">{post.username}</b>{post.description}</p>\r\n    //                 {/* <p className=\"text-secondary pt-1 author-description-comment\" id=\"Author-Description\">View all comments</p> */}\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       );\r\n    //     })\r\n    //   }\r\n\r\n    render() {\r\n        if (this.props.state.navigation.navigateToEdit) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/edit\",\r\n                }}\r\n            />\r\n        }\r\n        const { postToDisplay, user } = this.props.state;\r\n        return (\r\n            <div>\r\n                <Titlebar />\r\n                <div className=\"row\" style={{marginTop: '5rem'}}>\r\n                    <div className=\"col d-flex flex-column justify-content-center align-items-center\" id=\"Post\">\r\n                        <div className=\"post-wrapper d-flex flex-column mb-5\">\r\n                            <div className=\"w-100 d-flex flex-row justify-content-between align-items-center pt-2 mb-2\" id=\"Author-Post-Header\">\r\n                                <div className=\"d-flex justify-content-start align-items-center\">\r\n                                    <div className=\"author-post-img-wrapper d-flex justify-content-center align-items-center\">\r\n                                        <img className=\"rounded img-post img-fluid m-4 ml-5\" style={{ minWidth: '3rem' }} src=\"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\" />\r\n                                    </div>\r\n                                    <b className=\"post-author-username pl-3 ml-3\">{user.username}</b>\r\n                                </div>\r\n                                <div className=\"btn-group mr-4\">\r\n                                    <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Action\r\n  </button>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <EditDropdown post={postToDisplay} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-img-wrapper\">\r\n                                <img className=\"img-fluid\" src={postToDisplay.imageURL} />\r\n                            </div>\r\n                            <div className=\"w-100 d-flex flex-column justify-content-start pt-2\">\r\n                                <p className=\"text-left pb-0 mb-0 author-description-comment\" id=\"Author-Description\" style={{ fontSize: '85%' }}> <b className=\"pr-2\">{user.username}</b>{postToDisplay.description}</p>\r\n                                {/* <p className=\"text-secondary pt-1 author-description-comment\" id=\"Author-Description\">View all comments</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/index';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    login: action => dispatch(loginUser(action))\r\n  };\r\n}\r\n\r\n\r\nclass PrivateRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: false,\r\n      isLoaded: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.authRender();\r\n  }\r\n\r\n  authRender = () => {\r\n    axios.get(SERVER_BASE_URL + '/user')\r\n      .then(result => {\r\n        this.props.login(result.data.user);\r\n       // this.setState({ user: result.data.user, isLoaded: true });\r\n        // console.log('result private', result);\r\n        console.log('props private', this.props)\r\n      })\r\n      .catch(error => error);\r\n  }\r\n\r\n  // authRender = () => {\r\n  //   // axios.get('/user')\r\n  //   //   .then(result => console.log(result))\r\n  //   //   .catch(error => error);\r\n  //    if (this.state.user) {\r\n  //     console.log(this.state.user);\r\n  //     return <Route\r\n  //       path={this.props.path}\r\n  //       component={this.props.component}\r\n  //     />\r\n  //   } \r\n  // }\r\n\r\n  //render() {\r\n  render = () => {\r\n    const { component: Component, ...rest } = this.props;\r\n    const { user } = this.props.state;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: props.location }\r\n                }}\r\n              />\r\n            )\r\n        }\r\n      />\r\n    );\r\n    // const { component: Component, auth, ...rest } = this.props;\r\n    // const { user, isLoaded } = this.state;\r\n    // if (auth) {\r\n    //   return (\r\n    //     <Route\r\n    //       {...rest}\r\n    //       render={props => {\r\n    //         return <Component {...props} />\r\n    //       }}\r\n    //     />\r\n    //   )\r\n    // } else {\r\n    //   return (\r\n    //     <Redirect\r\n    //       to={{ pathname: '/login' }}\r\n    //     />\r\n    //   )\r\n    // }\r\n    // return (<h1>asdfjh</h1>);\r\n    // return this.authRender();\r\n    // this.state.user ? (\r\n    //   <Route\r\n    //   path={this.props.path}\r\n    //   component={this.props.component}\r\n    //   />\r\n    // ) : (\r\n    //   <Redirect\r\n    //         to={{\r\n    //           pathname: \"/login\",\r\n    //           state: { from: props.location }\r\n    //         }}\r\n    //       />\r\n    // );\r\n  }\r\n}\r\n\r\nconst PrivateRouteStateless = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/app.css';\r\nimport Titlebar from '../TitleBar/Titlebar';\r\nimport { updateUser, clearEditPost, navigateToEdit } from '../../actions/index';\r\nimport * as axios from 'axios';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n    return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateUser: user => dispatch(updateUser(user)),\r\n        clearEditPost: () => dispatch(clearEditPost()),\r\n        navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n    };\r\n}\r\n\r\nclass CreatePost extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imageSearchText: '',\r\n            retrievedImages: [],\r\n            finalImageGroups: [],\r\n            selectedImageUrl: '',\r\n            postDescriptionText: '',\r\n            selectPhotoPanelHide: '0px',\r\n            postPhotoPanelHide: '9999px',\r\n            postShared: false,\r\n            shouldUpdateUser: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ postDescriptionText: this.props.state.postToEdit.description, selectedImageUrl: this.props.state.postToEdit.imageURL });\r\n        console.log('edit post props', this.props);\r\n    }\r\n\r\n    getSearchedPhotos = (event) => {\r\n        event.preventDefault();\r\n        const { imageSearchText } = this.state;\r\n        axios.get(`https://api.unsplash.com/search/photos?page=1&per_page=18&query=${imageSearchText.replace(/\\s+/g, '+')}&client_id=4c1f5525e6dcace5b7a268ca4f5ac18f69dd4b46f3b01226b4287772783938e4`)\r\n            .then(result => {\r\n                console.log(result)\r\n                this.setState({ retrievedImages: result.data.results });\r\n                this.handleRetrievedImages();\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    handleRetrievedImages = () => {\r\n        const { retrievedImages } = this.state;\r\n        //TODO: display error to client if no images are recieved\r\n        // Refactor the logic below for clarity\r\n        if (retrievedImages.length > 0) {\r\n\r\n            const groupedImages = [[]];\r\n            retrievedImages.map((image, index) => {\r\n                const currentImageGroup = groupedImages[groupedImages.length - 1];\r\n                if (currentImageGroup.length < 2) {\r\n                    currentImageGroup.push(image);\r\n                } else {\r\n                    groupedImages.push([]);\r\n                    currentImageGroup.push(image);\r\n                }\r\n            });\r\n\r\n            const finalImageGroups = groupedImages.map((imageGroup) => {\r\n                return (\r\n                    <div className=\"row\">\r\n                        {imageGroup.map(image => {\r\n                            return (\r\n                                <div className=\"col-4 profile-col-pad\">\r\n                                    <div className=\"ProfileImageWrapper\">\r\n                                        <img className=\"img-fluid hover-pointer\" onClick={this.handlePostImageClick} src={image.urls.raw} data={image.urls.raw} />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                );\r\n            });\r\n            return this.setState({ finalImageGroups });\r\n        }\r\n    }\r\n\r\n    handlePostPhotoToFeed = (event) => {\r\n        event.preventDefault();\r\n        const { postDescriptionText, selectedImageUrl } = this.state;\r\n        axios.post(SERVER_BASE_URL + '/user/editPost', { postID: this.props.state.postToEdit._id, postDescriptionText, imageURL: selectedImageUrl })\r\n            .then(result => {\r\n                if (result.status === 200) {\r\n                    console.log(result);\r\n                    const { user } = result.data;\r\n                    this.props.updateUser(user)\r\n                    this.props.navigateToEdit(false);\r\n                    this.props.clearEditPost();\r\n                    this.setState({ postShared: true });\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    handleDeletePost = (event) => {\r\n        event.preventDefault();\r\n        const { postDescriptionText, selectedImageUrl } = this.state;\r\n        axios.post(SERVER_BASE_URL + '/user/deletePost', { postID: this.props.state.postToEdit._id, postDescriptionText, imageURL: selectedImageUrl })\r\n            .then(result => {\r\n                if (result.status === 200) {\r\n                    console.log(result);\r\n                    const { user } = result.data;\r\n                    this.props.updateUser(user);\r\n                    this.props.navigateToEdit(false);\r\n                    this.props.clearEditPost();\r\n                    console.log('eggs', this.props.state.postToEdit);\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    handlePostImageClick = (event) => {\r\n        const selectedImageUrl = event.target.attributes.getNamedItem('data').value;\r\n        this.setState({ selectedImageUrl, selectPhotoPanelHide: '-9999px', postPhotoPanelHide: '0px' });\r\n        console.log(selectedImageUrl);\r\n    }\r\n\r\n    handleImageSearchText = (event) => {\r\n        this.setState({ imageSearchText: event.target.value });\r\n    }\r\n\r\n    handlePostDescriptionText = (event) => {\r\n        this.setState({ postDescriptionText: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { postDescriptionText, selectedImageUrl, postShared,  } = this.state;\r\n        const { postToEdit } = this.props.state;\r\n        if (!postToEdit) return <Redirect to={{\r\n            pathname: \"/newsfeed\",\r\n            state: { from: this.props.location }\r\n        }} />;\r\n\r\n        return (\r\n            <div>\r\n                <Titlebar />\r\n                <div className=\"row\">\r\n                    <div style={{ minHeight: '15vh' }}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col d-flex flex-column justify-content-center align-items-center\" id=\"CreatePostWrapper\">\r\n                        <div className=\" w-75 create-post-panel\" style={{ overflow: 'hidden', position: 'relative' }}>\r\n                            <div className=\"d-flex flex-column justify-content-start align-items-center p-5\" style={{ overflowX: 'hidden', overflowY: 'scroll', position: 'absolute', width: '100%', height: '100%', }} id=\"Photo-Search-Wrapper\">\r\n                                <h1>Edit Post</h1>\r\n                                <form className=\"p-4 w-100\" onSubmit={(event) => event.preventDefault()}>\r\n                                    <textarea placeholder=\"Description...\" className=\"form-control\" value={postDescriptionText} onChange={this.handlePostDescriptionText}>Hello</textarea>\r\n                                    <button className=\"btn btn-primary p-2 m-1\" onClick={this.handlePostPhotoToFeed}>Share</button>\r\n                                    <button className=\"btn btn-warning p-2 m-1\" onClick={this.handleDeletePost}>Delete</button>\r\n                                </form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <img className=\"img-fluid hover-pointer\" src={selectedImageUrl} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../styles/app.css';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, navigateToEdit, navigateToDisplay } from '../../actions/index';\r\nimport * as axios from 'axios';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: action => dispatch(logoutUser(action)),\r\n    navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n    navigateToDisplay: navigate => dispatch(navigateToDisplay(navigate)),\r\n  };\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n  const logout = () => {\r\n    noNavigation();\r\n    props.logout(false); // sets user to false in redux state\r\n    axios.get(SERVER_BASE_URL + '/user/logout')\r\n    .then(result => console.log(result))\r\n    .catch(error => console.log(error));\r\n  }\r\n\r\n  const noNavigation = () => {\r\n    props.navigateToEdit(false);\r\n    props.navigateToDisplay(false);\r\n  }\r\n\r\n  return (\r\n   <div className=\"menu\" id=\"offcanvas-push\" uk-offcanvas=\"mode: slide; overlay: true; flip: true\">\r\n    <div class=\"uk-offcanvas-bar bg-white p-0\">\r\n        {/* <button class=\"uk-offcanvas-close\" type=\"button\" uk-close></button> */}\r\n        <ul className=\"pl-3 mt-5\" id=\"menu-items\">\r\n          <Link to='/createpost' activeClassName=\"active\" onClick={noNavigation} uk-toggle=\"target: #offcanvas-push\"> <li>Create Post</li> </Link>\r\n          <Link to='/profile' activeClassName=\"active\" onClick={noNavigation} uk-toggle=\"target: #offcanvas-push\"> <li>Profile</li> </Link>\r\n          <Link to='/newsfeed' activeClassName=\"active\" onClick={noNavigation} uk-toggle=\"target: #offcanvas-push\"> <li>Newsfeed</li> </Link>\r\n          <li onClick={logout} uk-toggle=\"target: #offcanvas-push\" uk-toggle=\"target: #offcanvas-push\">Logout</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from './Home/Home';\r\nimport NewsFeed from './NewsFeed/NewsFeed'\r\nimport Profile from './Profile/Profile';\r\nimport Signup from './Signup/Signup';\r\nimport Login from './Login/Login';\r\nimport CreatePost from './Posts/CreatePost';\r\nimport PostDisplay from './Posts/PostDisplay';\r\nimport PrivateRoute from './Auth/PrivateRoute';\r\nimport EditPost from './Posts/EditPost';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, navigateToDisplay, navigateToEdit } from '../actions/index';\r\nimport * as axios from 'axios';\r\nimport Menu from './Menu/Menu';\r\n\r\nconst SERVER_BASE_URL = '';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: action => dispatch(logoutUser(action)),\r\n    navigateToEdit: navigate => dispatch(navigateToEdit(navigate)),\r\n    navigateToDisplay: navigate => dispatch(navigateToDisplay(navigate)),\r\n  };\r\n}\r\n\r\nclass Routes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: false,\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillMount() {\r\n    this.auth();\r\n    this.props.navigateToEdit(false);\r\n    this.props.navigateToDisplay(false);\r\n  }\r\n\r\n  auth = () => {\r\n    axios.get(SERVER_BASE_URL + '/user')\r\n      .then(result => {\r\n        console.log('res', result);\r\n        if (result.status === 200) return this.props.login(false);\r\n        return this.setState({ user: result.data.user });\r\n      })\r\n      .catch(error => this.props.logout(false)); //Display server error to user gracefully, not just keeping them logged out\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Router>\r\n        <Menu />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <PrivateRoute path=\"/createpost\" component={CreatePost} />\r\n        <PrivateRoute path=\"/post\" component={PostDisplay} />\r\n        <PrivateRoute path=\"/edit\" component={EditPost} />\r\n        <PrivateRoute path=\"/newsfeed\" component={NewsFeed} />\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","import React, { Component } from 'react';\r\nimport Routes from './Components/Routes';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ padding: '0px', overflow: 'hidden' }}>\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ADD_ARTICLE, LOGIN_USER, LOGOUT_USER, UPDATE_USER, EDIT_POST, CLEAR_EDIT_POST, DISPLAY_POST, CLEAR_DISPLAY_POST, NAVIGATE_TO_EDIT_POST, NAVIGATE_TO_DISPLAY_POST } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  navigation: {\r\n    navigateToEdit: false,\r\n    navigateToDisplay: false,\r\n  },\r\n  postToDisplay: false,\r\n  postToEdit: false,\r\n  user: false,\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_ARTICLE) {\r\n    return Object.assign({}, state, {\r\n      articles: state.articles.concat(action.payload),\r\n    //  eggs: state.eggs.concat(action.payload)\r\n    });\r\n  }\r\n  if (action.type === LOGIN_USER) {\r\n    return Object.assign({}, state, {\r\n      user: state.user = action.payload,\r\n    });\r\n  }\r\n  if (action.type === UPDATE_USER) {\r\n    return Object.assign({}, state, {\r\n      user: state.user = action.payload,\r\n    });\r\n  }\r\n  if (action.type === LOGOUT_USER) {\r\n    return Object.assign({}, state, {\r\n      user: state.user = action.payload,\r\n      postToEdit: state.postToEdit = action.payload,\r\n    });\r\n  }\r\n  if (action.type === EDIT_POST) {\r\n    return Object.assign({}, state, {\r\n      postToEdit: state.postToEdit = action.payload,\r\n    });\r\n  }\r\n  if (action.type === CLEAR_EDIT_POST) {\r\n    return Object.assign({}, state, {\r\n      postToEdit: state.postToEdit = false,\r\n    });\r\n  }\r\n  if (action.type === DISPLAY_POST) {\r\n    return Object.assign({}, state, {\r\n      postToDisplay: state.postToDisplay = action.payload,\r\n    });\r\n  }\r\n  if (action.type === CLEAR_DISPLAY_POST) {\r\n    return Object.assign({}, state, {\r\n      postToDisplay: state.postToDisplay = false,\r\n    });\r\n  }\r\n  if (action.type === NAVIGATE_TO_EDIT_POST) {\r\n    return Object.assign({}, state, {\r\n      navigation: { ...state.navigation,  navigateToEdit: action.payload},\r\n    });\r\n  }\r\n  if (action.type === NAVIGATE_TO_DISPLAY_POST) {\r\n    return Object.assign({}, state, {\r\n      navigation: { ...state.navigation,  navigateToDisplay: action.payload},\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore, combineReducers } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\nimport rootReducer from '../reducers/index';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n    let store = createStore(persistedReducer)\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}\r\n\r\n\r\n// const store = createStore(rootReducer);\r\n// store.subscribe(() => console.log('state', store.getState()));\r\n\r\n// export default store;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport createStore from './store/index';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst { store, persistor } = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}